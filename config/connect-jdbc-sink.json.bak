{
  "name": "JdbcSinkConnector",
  "config": {
    "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
    "tasks.max": "1",
    "table.name.format": "kafka_${topic}",
    "connection.url": "jdbc:postgresql://db:5432/postgres",
    "connection.user": "postgres",
    "connection.password": "example",
    "auto.create": "true",
    "batch.size": 3000,
    "pk.mode": "record_key",
    "pk.fields": "id",
    "topics.regex": "customized_.*",
    "delete.enabled": "true",
    "insert.mode": "upsert",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter": "io.confluent.connect.json.JsonSchemaConverter",
    "value.converter.schema.registry.url": "http://kafka-schema-registry:8081",
    "transforms": "purchaseFilter,purchaseFilter2",
    "transforms.purchaseFilter.type": "io.confluent.connect.transforms.Filter$Value",
    "transforms.purchaseFilter.filter.condition": "$[?(@.name == 'purchase')]",
    "transforms.purchaseFilter.filter.type": "include",
    "transforms.purchaseFilter.missing.or.null.behavior": "exclude",
    "transforms.purchaseFilter2.type": "io.confluent.connect.transforms.Filter$Value",
    "transforms.purchaseFilter2.filter.condition": "$[?(@.studentId == '1')]",
    "transforms.purchaseFilter2.filter.type": "include",
    "transforms.purchaseFilter2.missing.or.null.behavior": "exclude"
  }
}